version: '3.8'

services:
  # ─────────────────────────────────────────────
  # 1) ZooKeeper
  # ─────────────────────────────────────────────
  zookeeper:
    image: zookeeper:3.8.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - cache-network

  # ─────────────────────────────────────────────
  # 2) Memcached 인스턴스 4개
  # ─────────────────────────────────────────────
  memcached1:
    image: memcached:1.6-alpine
    container_name: memcached1
    ports:
      - "11211:11211"
    networks:
      - cache-network

  memcached2:
    image: memcached:1.6-alpine
    container_name: memcached2
    ports:
      - "11212:11211"
    networks:
      - cache-network

  memcached3:
    image: memcached:1.6-alpine
    container_name: memcached3
    ports:
      - "11213:11211"
    networks:
      - cache-network

  memcached4:
    image: memcached:1.6-alpine
    container_name: memcached4
    ports:
      - "11214:11211"
    networks:
      - cache-network

  # ─────────────────────────────────────────────
  # 3) zk-monitor (HealthChecker + ZkWatcher)
  # ─────────────────────────────────────────────
  zk-monitor:
    build:
      context: .            # 이 디렉터리 안에 Dockerfile이 있어야 합니다.
      dockerfile: Dockerfile
    container_name: zk-monitor
    depends_on:
      - zookeeper
      - memcached1
      - memcached2
      - memcached3
      - memcached4
    environment:
      # 1) ZooKeeper 연결 정보
      ZOOKEEPER_CONNECTION: zookeeper:2181

      # 2) Spring Boot 서버 알림 엔드포인트
      #    (실제 운영/테스트 환경에 맞춰 <SPRING_HOST>:<SPRING_PORT> 로 바꿔 주세요)
      SPRING_NOTIFY_URL: http://<SPRING_HOST>:<SPRING_PORT>/zookeeper/nodeChange

      # 3) Memcached 동기화 설정
      MEMCACHED_BASE_NAME: memcached
      MEMCACHED_COUNT: 4
      MEMCACHED_PORT: 11211

      # 4) HealthChecker 주기 (초 단위)
      HEALTH_CHECK_INTERVAL: 10
    networks:
      - cache-network
    restart: on-failure

networks:
  cache-network:
    driver: bridge